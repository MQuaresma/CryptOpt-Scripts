#!/usr/bin/env bash
# vim: set syntax=bash:

# Who is wilson? Better watch 'Cast away' tonight

#singleton (Start)

umask 000                  # allow all users to access the file we're about to create
exec 9>"/tmp/${0##*/}.lck" # open lockfile on FD 9, based on basename of argv[0]
umask 022                  # move back to more restrictive file permissions
if ! flock -x -n 9; then
  echo "cant get lock. maybe already running."
  exit 1
fi #grab that lock, or exit the script early

#singleton (end)

sleeptime="{{ sleeptime | default (60) }}"

log() {
  logfile=./wilson.log
  printf '%(%Y-%m-%d %H:%M:%S)T [Host %15s] %s \n' '-1' $(hostname) "${1}" >>"${logfile}"
}

wait_for_node() {
  while
    echo sleeping
    sleep ${sleeptime}
    pgrep node -U $UID
  do :; done
}

# kill all currently running node procs if there is any
pkill node -U $UID
log "==========\nHi. Starting my work. :)"

IFS=' ' read -ra curves <<<"{{ curves | default('curve25519') }}"
for curve in "${curves[@]}"; do
  for method in square mul; do

    sed -i -e "s/--method [^ ]*/--method ${method}/" -e "s/--curve [^ ]*/--curve ${curve}/" ~/session.mux

    log "start ${curve} ${method}"

    starttime="$(TZ=UTC0 printf '%(%s)T\n' '-1')"
    ~/session.mux cryptopt &
    wait_for_node
    elapsedseconds=$(($(TZ=UTC0 printf '%(%s)T\n' '-1') - starttime))

    log " done ${curve}   ${method}   ${elapsedseconds}"
  done
done
log "==========\nDone for the day. See ya"
